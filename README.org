
* 프로젝트 개요
[[screenshot.png]]
- 주식 종목 검색 (현재는 snp500만, 추후 다른 국가 추가)
- 주식 데이터 그래프 표출 (하루 단위 O, 가중평균 O, 거래량 O, drawdown X, sharpe 지수 X)
- 과거 주식 대해 buy/sell -> 수익률 표출, drawdown, 여러 종목 hedging

* 프로젝트 진행상황
- dependabot issue 해결 필요!
** 백엔드
- +종목 대한 데이터, 아이콘, 기본정보 크롤링 완료 -> sqlite3 디비 안에 들어있음 -> postgres로 export 필요+ -> export 완료 
- +디플로이 안됨 -> 개인컴터로 디플로이+ -> docker compose 완료
- +거래 데이터 캐싱 필요함, redis 구현 필요+ -> redis cache 완료 
- +주식 데이터, 거래 데이터 paginated REST api+ -> 구현 완료
** 프론트
- favicon, title, cdn 등 필요 
- +페이지 레이아웃, 종목 search+ 완료
- +거래 데이터 표출 그래프 90% 완료 -> 그래프 대한 스크롤 기능 완료+ -> 그래프 크기 하드코딩 구현중 80%
- css 하드코딩 수정중, 모바일 지원 필요 50%
- state 중앙관리 X, +페이지별 컴포넌트 나누기 필요+
- +거래 데이터 불러오는 알고리즘 안정화 필요+ -> 안정화 완료
- +buy/sell 페이지 만들어야 함+ -> +buy/sell API 구현 필요+ -> buy/sell UI 구현 필요
  
* How to build docker image
- frontend at 127.0.0.1:5173
- backend at 127.0.0.1:8000/api/fdr/stocks
- redis cache at 127.0.0.1:6379
- mariadb at 127.0.0.1:3306
#+begin_src bash
  cd /path/to/Financiar/
  docker compose build
  docker compose up
#+end_src

* 프론트 실행 방법
: npm 있어야함 
#+begin_src bash
  cd FinancierFrontend/FinancierFrontend
  npm install
  npm run dev
#+end_src

- 서버 실행 후
  : https://localhost:5173 로 들어가기 

* 프론트 구성
: 컴포넌트 들어가있는 src/components -> src/App.jsx 안으로 컴포넌트 들어가짐
: 템플렛 짬뽕 + 부트스트랩 사용
: css는 src/App.css 안에있음 
- navbar
- search bar
- stocks listing
- backtesting
- footer  

* 백엔드 실행 방법 
: python, django 있어야 함 => 가이드 링크 : https://docs.djangoproject.com/ko/4.2/intro/install/
: venv 설정해놓아야 함 
#+begin_src bash
  cd FinancierBackend
  # ./manage.py makemigrations
  # ./manage.py migrate # DB 만들기 
  # ./manage.py loaddata test-cleaned-2.json  # 주식 정보 임포트 
  ./manage.py createsuperuser # 어드민 유저 생성 
  ./ manage.py runserver 
#+end_src

- 서버 실행 후 
  : http://127.0.0.1:8000/admin -> 어드민 패널 
  : http://127.0.0.1:8000/api/fdr/stocks -> 전체 주식 리스트
  : http://127.0.0.1:8000/api/fdr/stocks/[ticker] -> 특정 주식 정보 



